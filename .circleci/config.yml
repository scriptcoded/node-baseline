# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.10
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mongo:3.6

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}

      # Restore local dependencies from cache
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install local dependencies
          command: yarn install

      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
        
      # run tests!
      # - run: yarn test

      - run:
          name: Building
          command: npm run build-ng-prod
      
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
  
  deploy:
    docker:
      - image: circleci/node:8.10
      - image: circleci/mongo:3.6
      
    working_directory: /tmp/my-project

    steps:
      - checkout
      - add_ssh_keys:  # add key from CircleCI account based on fingerprint
          fingerprints:
            - "ec:2a:93:d3:0d:89:e1:5b:b2:a3:f8:92:73:cf:b9:36"
      - run:
          name: Run Setup Script
          command: bash .circleci/setup-heroku.sh
      - run:
          name: Fix host authenticity for heroku.com (50.19.85.154)
          command: |
            ssh-keyscan heroku.com >> ~/.ssh/known_hosts
      - run:
          name: Deploy Master to Heroku
          command: |  # this command is framework-dependent and may vary
            heroku git:remote -a $HEROKU_APP_NAME
            git push --force git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master
            sleep 5
            heroku ps:scale web=1
            heroku restart

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:  # only deploy when master successfully builds
          requires:
            - build
          filters:
            branches:
              only: master